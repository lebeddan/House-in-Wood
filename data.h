//----------------------------------------------------------------------------------------
/**
 * \file    data.h
 * \author  Lebedev Daniil
 * \date    2022
 * \brief   Configuration file for all parameters for the scene
 */
 //----------------------------------------------------------------------------------------

#pragma once
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

#include <vector>
#include <string>

// MACRO
#define N_POINT_LIGHTS 15
#define MY_ERROR_RET -1
#define MY_SUCCESS_RET 0
#define DUCK_ID 21

using namespace std;

// Time parmetrs
float deltaTime = 0.0f;
float lastFrame = 0.0f;

// Input parametrs
bool firstMouse = true;

// Scene WIDTH, HEIGHT, DEPTH
const glm::vec3 sceneInfo = glm::vec3(9.0f, 7.0f, 9.0f);

// Window parametrs
const unsigned int SCR_WIDTH = 1920;
const unsigned int SCR_HEIGHT = 1080;

// Enable/Disable effects
bool fogEnable = false;
bool lighterEnable = false;
bool tearPicture = false;
bool start_animate_duck = false;
bool pngFileEnable = true;
bool pngFileDisable = false;
bool defaultAlpha = false;
bool windowsAlpha = true;
bool enableHardcode = true;
bool disableHardcode = false;

// Counters
int	NlKeyPress = 0;
int	NfKeyPress = 0;
int n_static_view = 0;

// All paths of textures, shaders, skybox, models and audio effects 
vector<string> skyboxFacesPaths
{
    "assets/Brudslojan/posx.jpg",
    "assets/Brudslojan/negx.jpg",
    "assets/Brudslojan/posy.jpg",
    "assets/Brudslojan/negy.jpg",
    "assets/Brudslojan/posz.jpg",
    "assets/Brudslojan/negz.jpg"
};

const char* coreVSpath = "assets/shaders/vs.txt";
const char* coreFSpath = "assets/shaders/fs.txt";
const char* skyboxVSpath = "assets/shaders/skyboxVS.txt";
const char* skyboxFSpath = "assets/shaders/skyboxFS.txt";
const char* duckVSpath = "assets/shaders/robberDuckVS.txt";
const char* duckFSpath = "assets/shaders/robberDuckFS.txt";
const char* butterflyVSpath = "assets/shaders/butterflyVS.txt";
const char* butterflyFSpath = "assets/shaders/butterflyFS.txt";

const char* textureDuck = "assets/rubber_duck.png";
const char* textureButterfly = "assets/textures/butterfly.png";
const char* textureTable = "assets/textures/Wood2.jpg";

const char* startCar = "assets/sounds338954__inspectorj__car-ignition-exterior-a.wav";
const char* tearPainting = "assets/sounds/daniil.lebedev/Desktop/415767__inspectorj__tearing-newspaper-a.wav";

const char* houseModelpath = "assets/house.obj";
const char* policeCarModelpath = "assets/police car.obj";
const char* trashBinModelpath = "assets/outdoor_bin.obj";
const char* treeModelpath = "assets/tree.obj";
const char* plantsModelpath = "assets/Dieffenbachia_Plants.obj";
const char* tableModelpath = "assets/wooden_table.obj";
const char* frootsModelpath = "assets/Fruits pack.obj";
const char* chairModelpath = "assets/Counter Stool.obj";
const char* paintingModelpath = "assets/painting1.obj";
const char* couchModelpath = "assets/Couch.obj";
const char* coffeeTableModelpath = "assets/CoffeeTable.obj";
const char* loungeModelpath = "assets/lounge_chair.obj";
const char* bedModelpath = "assets/Bed.obj";
const char* moderChairModelpath = "assets/FabricChair.obj";
const char* modernTableModelpath = "assets/ModernTable.obj";
const char* lampModelpath = "assets/house_lamp.obj";
const char* wallLampModelpath = "assets/wall_lamp.obj";


// Vertices array for butterfly and duck 
float vertices[] = {
     -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,
      0.5f, -0.5f, -0.5f,  1.0f, 0.0f,
      0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
      0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
     -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
     -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,

     -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
      0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
      0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
      0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
     -0.5f,  0.5f,  0.5f,  0.0f, 1.0f,
     -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,

     -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
     -0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
     -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
     -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
     -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
     -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

      0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
      0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
      0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
      0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
      0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
      0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

     -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
      0.5f, -0.5f, -0.5f,  1.0f, 1.0f,
      0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
      0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
     -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
     -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,

     -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
      0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
      0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
      0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
     -0.5f,  0.5f,  0.5f,  0.0f, 0.0f,
     -0.5f,  0.5f, -0.5f,  0.0f, 1.0f
};

// Skybox vertices
float skyboxVertices[] = {
-1.0f,  1.0f, -1.0f,
-1.0f, -1.0f, -1.0f,
 1.0f, -1.0f, -1.0f,
 1.0f, -1.0f, -1.0f,
 1.0f,  1.0f, -1.0f,
-1.0f,  1.0f, -1.0f,

-1.0f, -1.0f,  1.0f,
-1.0f, -1.0f, -1.0f,
-1.0f,  1.0f, -1.0f,
-1.0f,  1.0f, -1.0f,
-1.0f,  1.0f,  1.0f,
-1.0f, -1.0f,  1.0f,

 1.0f, -1.0f, -1.0f,
 1.0f, -1.0f,  1.0f,
 1.0f,  1.0f,  1.0f,
 1.0f,  1.0f,  1.0f,
 1.0f,  1.0f, -1.0f,
 1.0f, -1.0f, -1.0f,

-1.0f, -1.0f,  1.0f,
-1.0f,  1.0f,  1.0f,
 1.0f,  1.0f,  1.0f,
 1.0f,  1.0f,  1.0f,
 1.0f, -1.0f,  1.0f,
-1.0f, -1.0f,  1.0f,

-1.0f,  1.0f, -1.0f,
 1.0f,  1.0f, -1.0f,
 1.0f,  1.0f,  1.0f,
 1.0f,  1.0f,  1.0f,
-1.0f,  1.0f,  1.0f,
-1.0f,  1.0f, -1.0f,

-1.0f, -1.0f, -1.0f,
-1.0f, -1.0f,  1.0f,
 1.0f, -1.0f, -1.0f,
 1.0f, -1.0f, -1.0f,
-1.0f, -1.0f,  1.0f,
 1.0f, -1.0f,  1.0f
};

// Directional light parametrs 
glm::vec3 lightPos(1.2f, 1.0f, 2.0f);
glm::vec3 lightDir(-0.2f, -8.0f, -0.3f);
glm::vec3 lightDirAmbient(0.2f, 0.2f, 0.2f);
glm::vec3 lightDirDiffuse(0.5f, 0.5f, 0.5f);
glm::vec3 lightDirSpecular(1.0f, 1.0f, 1.0f);

// Point light parametrs
glm::vec3 pointLightPositions[] = {
    // First floor
    glm::vec3(-1.70f, 0.8f, -0.7f),
    glm::vec3(1.70f, 0.85f, -0.7f),
    glm::vec3(-1.70f, 0.85f, 0.7f),
    glm::vec3(1.70f, 0.85f, 0.7f),
    glm::vec3(0.00f, 0.85f, 0.7f),
    //Second floor
    glm::vec3(-1.70f, 1.85f, -0.7f),
    glm::vec3(1.70f, 1.85f, -0.7f),
    glm::vec3(-1.70f, 1.85f, 0.7f),
    glm::vec3(1.70f, 1.85f, 0.7f),
    glm::vec3(0.00f, 1.85f, 0.93f),
    //Outside
    glm::vec3(-1.70f, 2.8f, -0.7f),
    glm::vec3(1.70f, 2.8f, -0.7f),
    glm::vec3(-1.70f, 2.8f, 0.7f),
    glm::vec3(1.70f, 2.8f, 0.7f),
    glm::vec3(0.00f, 2.8f, 0.93f)
};

glm::vec3 pointLightDir = glm::vec3(0.000170f, -0.999848f, 0.017450f);
float Kc = 1.0f;
float Kl = 1.09f;
float Kq = 5.32f;

float pointLightCutOff = 80.5f;
glm::vec3 lightPointAmbient(0.5f, 0.5f, 0.5f);
glm::vec3 lightPointDiffuse(1.0f, 1.0f, 1.0f);
glm::vec3 lightPointSpecular(1.0f, 1.0f, 1.0f);

// Lighter parametrs
float cutOffLighter = 45.0f;

// My materials parametrs
// Perl
glm::vec3 perlAmbient(0.25f, 0.20725f, 0.20725f);
glm::vec3 perlDiffuse(1.0f, 0.829f, 0.829f);
glm::vec3 perlSpecular(0.296648f, 0.296648f, 0.296648f);
float perlShininess = 64.0f;
//Silver 
glm::vec3 silverAmbient(0.25f, 0.25f, 0.25f);
glm::vec3 silverDiffuse(0.4f, 0.4f, 0.4f);
glm::vec3 silverSpecular(0.774597f, 0.774597f, 0.774597f);
float silverShininess = 76.8f;
// Copper
glm::vec3 copperAmbient(0.19125f, 0.0735f, 0.0225f);
glm::vec3 copperDiffuse(0.7038f, 0.27048f, 0.0828f);
glm::vec3 copperSpecular(0.256777f, 0.137622f, 0.086014f);
float copperShininess = 12.8f;
// Bed
glm::vec3 bedAmbient(0.2f, 0.2f, 0.2f);
glm::vec3 bedDiffuse(0.8f, 0.8f, 0.8f);
glm::vec3 bedSpecular(0.0f, 0.0f, 0.0f);
float bedShininess = 38.4f;
// Default 
glm::vec3 defaultAmbient(0.2f, 0.2f, 0.2f);
glm::vec3 defaultDiffuse(0.8f, 0.8f, 0.8f);
glm::vec3 defaultSpecular(0.4f, 0.4f, 0.4f);
float defaultShininess = 64.4f;

// Camera parametrs 
float lastX = SCR_WIDTH / 2.0f;
float lastY = SCR_HEIGHT / 2.0f;
const float YAW = -90.0f;
const float PITCH = 0.0f;
const float SPEED = 1.5f;
const float SENSITIVITY = 0.1f;
const float ZOOM = 45.0f;

const float near = 0.1f;
const float far = 100.0f;

const float maxPitch = 89.0f;
const float minPitch = -89.0f;

const float shiftSpeed = 4.5f;

glm::vec3 cameraStartPos = glm::vec3(0.0f, 1.0f, 5.0f);
glm::vec3 frontStartPos = glm::vec3(0.0f, 0.0f, 3.0f);
glm::vec3 upStartPos = glm::vec3(0.0f, 1.0f, 0.0f);

const float zoomMax = 45.0f;
const float zoomMin = 1.0f;

enum Camera_Movement {
    FORWARD,
    BACKWARD,
    LEFT,
    RIGHT
};

const glm::vec3 staticView1Outside = glm::vec3(-8.047682f, 5.964971f, -8.509727f);
const glm::vec3 staticView2Outside = glm::vec3(6.944f, 1.734609f, 5.406538f);
const glm::vec3 staticView3Inside = glm::vec3(2.845170f, 0.845387f, 0.27596f);
const glm::vec3 staticView4InsideKitchen = glm::vec3(-0.819897f, 0.824594f, -1.287969f);

const float staticYaw1 = 50.4f;
const float staticPitch1 = -19.6f;
const float staticYaw2 = 214.5f;
const float staticPitch2 = -8.7f;
const float staticYaw3 = -196.1f;
const float staticPitch3 = -11.8f;
const float staticYaw4 = 144.7f;
const float staticPitch4 = -18.3f;

// Windows names
const string back_window_bottom_left_name = "Window.008_Cube.063";
const string back_window_bottom_middle_name = "Window.007_Cube.062";
const string back_window_bottom_rightest_name = "Window.006_Cube.061";
const string back_window_top_rightest_name = "Window.005_Cube.060";
const string back_window_top_miidle_name = "Window.004_Cube.059";
const string back_window_top_left_name = "Window.003_Cube.058";
const string front_window_top_left_name = "Window.002_Cube.057";
const string front_window_top_middle_name = "Window.001_Cube.056";
const string front_window_top_right_name = "Window_Cube.055";
const string door_window_front_left_name = "Door_glasswall2_Cube.012";
const string door_window_front_right_name = "Door_glasswall1_Cube.014";
const string front_windows_bottom_name = "Ground_floor_glasswall_Cube.007";

const string front_window8 = "water_Cube.041";

const string front_window10 = "Door_glasswall2_Cube.012";
const string door_window_top_right_teracce = "Door_teracce4.1_Cube.054";
const string door_window_top_right_teracce2 = "Door_teracce3.1_Cube.053";
const string door_window_top_left_teracce = "Door_teracce2.1_Cube.052";
const string door_window_top_left_teracce2 = "Door_teracce1.1_Cube.051";
const string water = "water_Cube.041";

// Butterfly parametrs
glm::vec3 buttefrlyPos1 = glm::vec3(-9.0f, 0.0f, 0.0f);
glm::vec3 butterflyPos2 = glm::vec3(-0.6f, 0.5f, 4.0f);
glm::vec3 butterflySize = glm::vec3(0.2f);
glm::vec3 stopPos = glm::vec3(0.0f);
// Butterfly animation paramters
glm::vec3 butterflyRot = glm::vec3(0.0f, 1.0f, 0.0f);
float speedAnimation = 11.4f;

// Duck parametrs
glm::vec3 duckStartPos = glm::vec3(0.6f, 0.0f, 0.0f);
glm::vec3 duckWaitiingPos = glm::vec3(0.0f, 0.01f, 4.0f);
glm::vec3 duckSize = glm::vec3(0.2f);
float speedOfRotation = 10.3f;

// House parametrs
glm::vec3 housePos = glm::vec3(0.0f, 0.0f, 0.0f);
glm::vec3 houseSize = glm::vec3(0.5f, 0.5f, 0.5f);

// Lamps parametrs
vector <glm::vec3> lampPositions{
    // First floor
    glm::vec3(-1.70f, 0.8f, -0.7f),
    glm::vec3(1.70f, 0.85f, -0.7f),
    glm::vec3(-1.70f, 0.85f, 0.7f),
    glm::vec3(1.70f, 0.85f, 0.7f),
    glm::vec3(0.00f, 0.85f, 0.7f),
    //Second floor
    glm::vec3(-1.70f, 1.85f, -0.7f),
    glm::vec3(1.70f, 1.85f, -0.7f),
    glm::vec3(-1.70f, 1.85f, 0.7f),
    glm::vec3(1.70f, 1.85f, 0.7f),
    glm::vec3(0.00f, 1.85f, 0.93f)
};

// Chairs parametrs
vector <glm::vec3> chairsPostion{
    glm::vec3(-2.0f, 0.1f, -0.5f),
    glm::vec3(-1.2f, 0.1f, -0.5f),
    glm::vec3(-2.0f, 0.1f, -0.9f),
    glm::vec3(-1.2f, 0.1f, -0.9f)
};

// Tree paramters
vector <glm::vec3> treePositions{
    glm::vec3(-7.0f, 0.06f, 7.0f),
    glm::vec3(-7.0f, 0.06f, -7.0f),
    glm::vec3(6.0f, 0.06f, 6.0f)
};

// Plants parametrs 
vector <glm::vec3> plantsPositions{
    glm::vec3(-2.7f, 0.0f, 3.0f),
    glm::vec3(2.7f, 0.0f, 3.0f)
};

// Lounge chair paramters
vector <glm::vec3> loungeChairPositions{
    glm::vec3(2.0f, 0.03f, 2.5f),
    glm::vec3(-1.0f, 0.03f, 3.5f)
};

// Bed paramters
vector <glm::vec3> bedPositions{
    glm::vec3(2.5f, 0.93f, -0.95f),
    glm::vec3(-2.5f, 0.93f, -0.95f)
};

// Table parametrs
glm::vec3 tablePos = glm::vec3(-2.0f, 0.05f, -0.7f);

// Froots parametrs
glm::vec3 frootsPos = glm::vec3(-1.7f, 0.347f, -0.7f);

// Couch parametrs
glm::vec3 couchPos = glm::vec3(2.0f, 0.0f, 0.59f);

// Coffee table parametrs
glm::vec3 coffeeTablePos = glm::vec3(2.0f, 0.03f, 0.59f);

// Modern table parametrs
glm::vec3 modernTablePos = glm::vec3(-1.7f, 0.93f, -0.95f);

// Bin table parametrs
glm::vec3 binPos = glm::vec3(2.7f, 0.03f, -1.88f);

// Modern chair parametrs
glm::vec3 modernChairPos = glm::vec3(-1.7f, 0.93f, -0.95f);

// Police car parametrs
glm::vec3 policeCarPos = glm::vec3(0.0f, 0.05f, -6.0f);

// Windows paramters
glm::vec3 windowsPos = glm::vec3(0.0f, 0.0f, 0.0f);

// Table vertices(30+ triangles)
glm::vec3 tableStartPos = glm::vec3(0.0f, 0.03f, 3.0f);
glm::vec3 tableSize = glm::vec3(0.008f);
const int cube_002NAttribsPerVertex = 8;
const int cube_002NVertices = 270;
const int cube_002NTriangles = 156;
float cube_002Vertices[] = {
  7.84182f,51.0918f,-0.281877f,0.0f,-0.0f,-1.0f,0.65688f,0.990376f,
  7.84182f,-51.5195f,-0.281877f,0.0f,-0.0f,-1.0f,0.65688f,0.5393f,
  -7.9515f,-51.5195f,-0.281877f,0.0f,-0.0f,-1.0f,0.013733f,0.5393f,
  -7.9515f,51.0919f,-0.281877f,0.0f,-0.0f,-1.0f,0.013733f,0.990376f,
  7.84182f,51.0918f,-0.198257f,-0.0f,0.0f,1.0f,0.658228f,0.992066f,
  -7.9515f,51.0919f,-0.198257f,-0.0f,0.0f,1.0f,0.010602f,0.992066f,
  -7.9515f,-51.5195f,-0.198257f,-0.0f,0.0f,1.0f,0.010602f,0.537849f,
  7.84181f,-51.5195f,-0.198257f,-0.0f,0.0f,1.0f,0.658228f,0.537849f,
  7.84182f,51.0918f,-0.281877f,1.0f,-0.0f,9e-06f,0.528025f,0.616637f,
  7.84182f,51.0918f,-0.198257f,1.0f,-0.0f,9e-06f,0.528025f,0.634229f,
  7.84181f,-51.5195f,-0.198257f,1.0f,-0.0f,9e-06f,0.104286f,0.634229f,
  7.84182f,-51.5195f,-0.281877f,1.0f,-0.0f,9e-06f,0.104286f,0.616637f,
  7.84182f,-51.5195f,-0.281877f,-2e-06f,-1.0f,-0.000114f,0.656421f,0.690978f,
  7.84181f,-51.5195f,-0.198257f,-2e-06f,-1.0f,-0.000114f,0.656421f,0.709963f,
  -7.9515f,-51.5195f,-0.198257f,-2e-06f,-1.0f,-0.000114f,0.004416f,0.709963f,
  -7.9515f,-51.5195f,-0.281877f,-2e-06f,-1.0f,-0.000114f,0.004416f,0.690978f,
  -7.9515f,-51.5195f,-0.281877f,-1.0f,0.0f,-2.9e-05f,0.116088f,0.624421f,
  -7.9515f,-51.5195f,-0.198257f,-1.0f,0.0f,-2.9e-05f,0.116088f,0.640951f,
  -7.9515f,51.0919f,-0.198257f,-1.0f,0.0f,-2.9e-05f,0.514277f,0.640951f,
  -7.9515f,51.0919f,-0.281877f,-1.0f,0.0f,-2.9e-05f,0.514277f,0.624421f,
  7.84182f,51.0918f,-0.198257f,2e-06f,1.0f,0.000228f,0.656516f,0.711631f,
  7.84182f,51.0918f,-0.281877f,2e-06f,1.0f,0.000228f,0.656516f,0.692614f,
  -7.9515f,51.0919f,-0.281877f,2e-06f,1.0f,0.000228f,0.003419f,0.692614f,
  -7.9515f,51.0919f,-0.198257f,2e-06f,1.0f,0.000228f,0.003419f,0.711631f,
  -7.91105f,-53.7379f,-1.04645f,-2.7e-05f,-1.0f,1e-06f,0.107174f,0.825089f,
  -7.91105f,-53.7379f,0.953552f,-2.7e-05f,-1.0f,1e-06f,0.532192f,0.825089f,
  -8.12695f,-53.7379f,0.953552f,-2.7e-05f,-1.0f,1e-06f,0.532192f,0.851535f,
  -8.12695f,-53.7379f,-1.04645f,-2.7e-05f,-1.0f,1e-06f,0.107174f,0.851535f,
  -8.12695f,-34.8728f,-1.04645f,2.7e-05f,1.0f,-1e-06f,0.118215f,0.818924f,
  -8.12695f,-34.8728f,0.953552f,2.7e-05f,1.0f,-1e-06f,0.514386f,0.818924f,
  -7.91105f,-34.8728f,0.953552f,2.7e-05f,1.0f,-1e-06f,0.514386f,0.794274f,
  -7.91105f,-34.8728f,-1.04645f,2.7e-05f,1.0f,-1e-06f,0.118215f,0.794274f,
  -7.91105f,-51.6509f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.602641f,
  -7.91105f,-53.7379f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.572754f,
  -8.12695f,-53.7379f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.568726f,
  -8.12695f,-51.6509f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.598794f,
  -8.12695f,-34.8728f,-1.04645f,-0.0f,0.0f,-1.0f,0.021628f,0.840527f,
  -7.91105f,-34.8728f,-1.04645f,-0.0f,0.0f,-1.0f,0.023561f,0.84291f,
  -7.91105f,-53.7379f,0.953552f,-0.0f,0.0f,1.0f,0.483854f,0.572754f,
  -7.91105f,-51.6509f,0.953552f,-0.0f,0.0f,1.0f,0.483854f,0.602641f,
  -8.12695f,-51.6509f,0.953552f,-0.0f,0.0f,1.0f,0.484726f,0.598794f,
  -8.12695f,-53.7379f,0.953552f,-0.0f,0.0f,1.0f,0.484726f,0.568726f,
  -7.91105f,-34.8728f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.842909f,
  -8.12695f,-34.8728f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.840527f,
  -8.12695f,-53.7379f,0.953552f,-1.0f,0.0f,0.0f,0.484726f,0.568726f,
  -8.12695f,-51.6509f,0.953552f,-1.0f,0.0f,0.0f,0.484726f,0.598794f,
  -8.12695f,-51.6509f,-1.04645f,-1.0f,0.0f,0.0f,0.021628f,0.598794f,
  -8.12695f,-53.7379f,-1.04645f,-1.0f,0.0f,0.0f,0.021628f,0.568726f,
  -8.12695f,-34.8728f,0.953552f,-1.0f,0.0f,0.0f,0.484726f,0.840527f,
  -8.12695f,-34.8728f,-1.04645f,-1.0f,0.0f,0.0f,0.021628f,0.840527f,
  -7.91105f,-51.6509f,-1.04645f,1.0f,0.0f,0.0f,0.023561f,0.602641f,
  -7.91105f,-34.8728f,-1.04645f,1.0f,0.0f,0.0f,0.023561f,0.84291f,
  -7.91105f,-34.8728f,0.953552f,1.0f,0.0f,0.0f,0.483854f,0.842909f,
  -7.91105f,-51.6509f,0.953552f,1.0f,0.0f,0.0f,0.483854f,0.602641f,
  -7.91105f,-51.6509f,-1.04645f,0.0f,1.0f,2e-06f,0.108474f,0.821461f,
  -7.91105f,-51.6509f,0.953552f,0.0f,1.0f,2e-06f,0.530096f,0.821461f,
  -5.99072f,-51.6509f,0.953552f,0.0f,1.0f,2e-06f,0.530096f,0.588114f,
  -5.99072f,-51.6509f,-1.04645f,0.0f,1.0f,2e-06f,0.108474f,0.588114f,
  -5.99072f,-53.7379f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.606544f,
  -5.99072f,-51.6509f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.634903f,
  -5.99072f,-51.6509f,-1.04645f,-0.0f,0.0f,-1.0f,0.039773f,0.634903f,
  -5.99072f,-53.7379f,-1.04645f,-0.0f,0.0f,-1.0f,0.039773f,0.606544f,
  -7.91105f,-53.7379f,0.953552f,0.0f,-1.0f,-2e-06f,0.532192f,0.825089f,
  -7.91105f,-53.7379f,-1.04645f,0.0f,-1.0f,-2e-06f,0.107174f,0.825089f,
  -5.99072f,-53.7379f,-1.04645f,0.0f,-1.0f,-2e-06f,0.107174f,0.589862f,
  -5.99072f,-53.7379f,0.953552f,0.0f,-1.0f,-2e-06f,0.532192f,0.589862f,
  -5.99072f,-53.7379f,-1.04645f,1.0f,0.0f,0.0f,0.039773f,0.606544f,
  -5.99072f,-51.6509f,-1.04645f,1.0f,0.0f,0.0f,0.039773f,0.634903f,
  -5.99072f,-51.6509f,0.953552f,1.0f,0.0f,0.0f,0.476538f,0.634903f,
  -5.99072f,-53.7379f,0.953552f,1.0f,0.0f,0.0f,0.476538f,0.606544f,
  -8.11336f,51.6727f,-1.04645f,-1.0f,0.0f,-0.0f,0.107174f,0.825089f,
  -8.11336f,51.6727f,0.953552f,-1.0f,0.0f,-0.0f,0.532192f,0.825089f,
  -8.11336f,53.6727f,0.953552f,-1.0f,0.0f,-0.0f,0.532192f,0.851535f,
  -8.11336f,53.6727f,-1.04645f,-1.0f,0.0f,-0.0f,0.107174f,0.851535f,
  -6.07689f,53.6727f,-1.04645f,1.0f,-0.0f,-0.0f,0.118215f,0.818924f,
  -6.07689f,53.6727f,0.953552f,1.0f,-0.0f,-0.0f,0.514386f,0.818924f,
  -6.07689f,51.6727f,0.953552f,1.0f,-0.0f,-0.0f,0.514386f,0.794274f,
  -6.07689f,51.6727f,-1.04645f,1.0f,-0.0f,-0.0f,0.118215f,0.794274f,
  -7.88807f,51.6727f,-1.04645f,0.0f,-0.0f,-1.0f,0.023561f,0.602641f,
  -8.11336f,51.6727f,-1.04645f,0.0f,-0.0f,-1.0f,0.023561f,0.572754f,
  -8.11336f,53.6727f,-1.04645f,0.0f,-0.0f,-1.0f,0.021628f,0.568726f,
  -7.88807f,53.6727f,-1.04645f,0.0f,-0.0f,-1.0f,0.021628f,0.598794f,
  -6.07689f,53.6727f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.840527f,
  -6.07689f,51.6727f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.84291f,
  -8.11336f,51.6727f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.572754f,
  -7.88807f,51.6727f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.602641f,
  -7.88807f,53.6727f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.598794f,
  -8.11336f,53.6727f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.568726f,
  -6.07689f,51.6727f,0.953552f,-0.0f,0.0f,1.0f,0.483854f,0.842909f,
  -6.07689f,53.6727f,0.953552f,-0.0f,0.0f,1.0f,0.484726f,0.840527f,
  -8.11336f,53.6727f,0.953552f,0.0f,1.0f,-0.0f,0.484726f,0.568726f,
  -7.88807f,53.6727f,0.953552f,0.0f,1.0f,-0.0f,0.484726f,0.598794f,
  -7.88807f,53.6727f,-1.04645f,0.0f,1.0f,-0.0f,0.021628f,0.598794f,
  -8.11336f,53.6727f,-1.04645f,0.0f,1.0f,-0.0f,0.021628f,0.568726f,
  -6.07689f,53.6727f,0.953552f,0.0f,1.0f,-0.0f,0.484726f,0.840527f,
  -6.07689f,53.6727f,-1.04645f,0.0f,1.0f,-0.0f,0.021628f,0.840527f,
  -7.88807f,51.6727f,-1.04645f,0.0f,-1.0f,-0.0f,0.023561f,0.602641f,
  -6.07689f,51.6727f,-1.04645f,0.0f,-1.0f,-0.0f,0.023561f,0.84291f,
  -6.07689f,51.6727f,0.953552f,0.0f,-1.0f,-0.0f,0.483854f,0.842909f,
  -7.88807f,51.6727f,0.953552f,0.0f,-1.0f,-0.0f,0.483854f,0.602641f,
  -7.88807f,51.6727f,-1.04645f,1.0f,-0.0f,0.0f,0.108474f,0.821461f,
  -7.88807f,51.6727f,0.953552f,1.0f,-0.0f,0.0f,0.530096f,0.821461f,
  -7.88807f,33.8833f,0.953552f,1.0f,-0.0f,0.0f,0.530096f,0.588114f,
  -7.88807f,33.8833f,-1.04645f,1.0f,-0.0f,0.0f,0.108474f,0.588114f,
  -8.11336f,33.8833f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.606544f,
  -7.88807f,33.8833f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.634903f,
  -7.88807f,33.8833f,-1.04645f,0.0f,0.0f,-1.0f,0.039773f,0.634903f,
  -8.11336f,33.8833f,-1.04645f,0.0f,0.0f,-1.0f,0.039773f,0.606544f,
  -8.11336f,51.6727f,0.953552f,-1.0f,0.0f,-1e-06f,0.532192f,0.825089f,
  -8.11336f,51.6727f,-1.04645f,-1.0f,0.0f,-1e-06f,0.107174f,0.825089f,
  -8.11336f,33.8833f,-1.04645f,-1.0f,0.0f,-1e-06f,0.107174f,0.589862f,
  -8.11336f,33.8833f,0.953552f,-1.0f,0.0f,-1e-06f,0.532192f,0.589862f,
  -8.11336f,33.8833f,-1.04645f,0.0f,-1.0f,-0.0f,0.039773f,0.606544f,
  -7.88807f,33.8833f,-1.04645f,0.0f,-1.0f,-0.0f,0.039773f,0.634903f,
  -7.88807f,33.8833f,0.953552f,0.0f,-1.0f,-0.0f,0.476538f,0.634903f,
  -8.11336f,33.8833f,0.953552f,0.0f,-1.0f,-0.0f,0.476538f,0.606544f,
  7.85492f,53.377f,-1.04645f,1.8e-05f,1.0f,2e-06f,0.107174f,0.825089f,
  7.85492f,53.377f,0.953552f,1.8e-05f,1.0f,2e-06f,0.532192f,0.825089f,
  8.07082f,53.377f,0.953552f,1.8e-05f,1.0f,2e-06f,0.532192f,0.851535f,
  8.07082f,53.377f,-1.04645f,1.8e-05f,1.0f,2e-06f,0.107174f,0.851535f,
  8.07082f,34.5119f,-1.04645f,-1.8e-05f,-1.0f,-2e-06f,0.118215f,0.818924f,
  8.07082f,34.5119f,0.953552f,-1.8e-05f,-1.0f,-2e-06f,0.514386f,0.818924f,
  7.85492f,34.5119f,0.953552f,-1.8e-05f,-1.0f,-2e-06f,0.514386f,0.794274f,
  7.85492f,34.5119f,-1.04645f,-1.8e-05f,-1.0f,-2e-06f,0.118215f,0.794274f,
  7.85492f,51.29f,-1.04645f,-0.0f,0.0f,-1.0f,0.023561f,0.602641f,
  7.85492f,53.377f,-1.04645f,-0.0f,0.0f,-1.0f,0.023561f,0.572754f,
  8.07082f,53.377f,-1.04645f,-0.0f,0.0f,-1.0f,0.021628f,0.568726f,
  8.07082f,51.29f,-1.04645f,-0.0f,0.0f,-1.0f,0.021628f,0.598794f,
  8.07082f,34.5119f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.840527f,
  7.85492f,34.5119f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.84291f,
  7.85492f,53.377f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.572754f,
  7.85492f,51.29f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.602641f,
  8.07082f,51.29f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.598794f,
  8.07082f,53.377f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.568726f,
  7.85492f,34.5119f,0.953552f,0.0f,0.0f,1.0f,0.483854f,0.842909f,
  8.07082f,34.5119f,0.953552f,0.0f,0.0f,1.0f,0.484726f,0.840527f,
  8.07082f,53.377f,0.953552f,1.0f,0.0f,-0.0f,0.484726f,0.568726f,
  8.07082f,51.29f,0.953552f,1.0f,0.0f,-0.0f,0.484726f,0.598794f,
  8.07082f,51.29f,-1.04645f,1.0f,0.0f,-0.0f,0.021628f,0.598794f,
  8.07082f,53.377f,-1.04645f,1.0f,0.0f,-0.0f,0.021628f,0.568726f,
  8.07082f,34.5119f,0.953552f,1.0f,0.0f,-0.0f,0.484726f,0.840527f,
  8.07082f,34.5119f,-1.04645f,1.0f,0.0f,-0.0f,0.021628f,0.840527f,
  7.85492f,51.29f,-1.04645f,-1.0f,0.0f,-0.0f,0.023561f,0.602641f,
  7.85492f,34.5119f,-1.04645f,-1.0f,0.0f,-0.0f,0.023561f,0.84291f,
  7.85492f,34.5119f,0.953552f,-1.0f,0.0f,-0.0f,0.483854f,0.842909f,
  7.85492f,51.29f,0.953552f,-1.0f,0.0f,-0.0f,0.483854f,0.602641f,
  7.85492f,51.29f,-1.04645f,0.0f,-1.0f,0.0f,0.108474f,0.821461f,
  7.85492f,51.29f,0.953552f,0.0f,-1.0f,0.0f,0.530096f,0.821461f,
  5.93459f,51.29f,0.953552f,0.0f,-1.0f,0.0f,0.530096f,0.588114f,
  5.93459f,51.29f,-1.04645f,0.0f,-1.0f,0.0f,0.108474f,0.588114f,
  5.93459f,53.377f,0.953552f,-0.0f,0.0f,1.0f,0.476538f,0.606544f,
  5.93459f,51.29f,0.953552f,-0.0f,0.0f,1.0f,0.476538f,0.634903f,
  5.93459f,51.29f,-1.04645f,0.0f,0.0f,-1.0f,0.039773f,0.634903f,
  5.93459f,53.377f,-1.04645f,0.0f,0.0f,-1.0f,0.039773f,0.606544f,
  7.85492f,53.377f,0.953552f,-2e-06f,1.0f,-2e-06f,0.532192f,0.825089f,
  7.85492f,53.377f,-1.04645f,-2e-06f,1.0f,-2e-06f,0.107174f,0.825089f,
  5.93459f,53.377f,-1.04645f,-2e-06f,1.0f,-2e-06f,0.107174f,0.589862f,
  5.93459f,53.377f,0.953552f,-2e-06f,1.0f,-2e-06f,0.532192f,0.589862f,
  5.93459f,53.377f,-1.04645f,-1.0f,0.0f,0.0f,0.039773f,0.606544f,
  5.93459f,51.29f,-1.04645f,-1.0f,0.0f,0.0f,0.039773f,0.634903f,
  5.93459f,51.29f,0.953552f,-1.0f,0.0f,0.0f,0.476538f,0.634903f,
  5.93459f,53.377f,0.953552f,-1.0f,0.0f,0.0f,0.476538f,0.606544f,
  8.07159f,-51.5741f,-1.04645f,1.0f,-0.0f,0.0f,0.107174f,0.825089f,
  8.07159f,-51.5741f,0.953552f,1.0f,-0.0f,0.0f,0.532192f,0.825089f,
  8.07158f,-53.5741f,0.953552f,1.0f,-0.0f,0.0f,0.532192f,0.851535f,
  8.07159f,-53.5741f,-1.04645f,1.0f,-0.0f,0.0f,0.107174f,0.851535f,
  6.03512f,-53.5741f,-1.04645f,-1.0f,0.0f,-0.0f,0.118215f,0.818924f,
  6.03512f,-53.5741f,0.953552f,-1.0f,0.0f,-0.0f,0.514386f,0.818924f,
  6.03512f,-51.5741f,0.953552f,-1.0f,0.0f,-0.0f,0.514386f,0.794274f,
  6.03512f,-51.5741f,-1.04645f,-1.0f,0.0f,-0.0f,0.118215f,0.794274f,
  7.8463f,-51.5741f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.602641f,
  8.07159f,-51.5741f,-1.04645f,0.0f,0.0f,-1.0f,0.023561f,0.572754f,
  8.07159f,-53.5741f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.568726f,
  7.8463f,-53.5741f,-1.04645f,0.0f,0.0f,-1.0f,0.021628f,0.598794f,
  6.03512f,-53.5741f,-1.04645f,0.0f,-0.0f,-1.0f,0.021628f,0.840527f,
  6.03512f,-51.5741f,-1.04645f,0.0f,-0.0f,-1.0f,0.023561f,0.84291f,
  8.07159f,-51.5741f,0.953552f,0.0f,-0.0f,1.0f,0.483854f,0.572754f,
  7.8463f,-51.5741f,0.953552f,0.0f,-0.0f,1.0f,0.483854f,0.602641f,
  7.8463f,-53.5741f,0.953552f,0.0f,-0.0f,1.0f,0.484726f,0.598794f,
  8.07158f,-53.5741f,0.953552f,0.0f,-0.0f,1.0f,0.484726f,0.568726f,
  6.03512f,-51.5741f,0.953552f,0.0f,-0.0f,1.0f,0.483854f,0.842909f,
  6.03512f,-53.5741f,0.953552f,0.0f,-0.0f,1.0f,0.484726f,0.840527f,
  8.07158f,-53.5741f,0.953552f,0.0f,-1.0f,0.0f,0.484726f,0.568726f,
  7.8463f,-53.5741f,0.953552f,0.0f,-1.0f,0.0f,0.484726f,0.598794f,
  7.8463f,-53.5741f,-1.04645f,0.0f,-1.0f,0.0f,0.021628f,0.598794f,
  8.07159f,-53.5741f,-1.04645f,0.0f,-1.0f,0.0f,0.021628f,0.568726f,
  6.03512f,-53.5741f,0.953552f,0.0f,-1.0f,0.0f,0.484726f,0.840527f,
  6.03512f,-53.5741f,-1.04645f,0.0f,-1.0f,0.0f,0.021628f,0.840527f,
  7.8463f,-51.5741f,-1.04645f,1e-06f,1.0f,1e-06f,0.023561f,0.602641f,
  6.03512f,-51.5741f,-1.04645f,1e-06f,1.0f,1e-06f,0.023561f,0.84291f,
  6.03512f,-51.5741f,0.953552f,1e-06f,1.0f,1e-06f,0.483854f,0.842909f,
  7.8463f,-51.5741f,0.953552f,1e-06f,1.0f,1e-06f,0.483854f,0.602641f,
  7.8463f,-51.5741f,-1.04645f,-1.0f,0.0f,0.0f,0.108474f,0.821461f,
  7.8463f,-51.5741f,0.953552f,-1.0f,0.0f,0.0f,0.530096f,0.821461f,
  7.8463f,-33.7848f,0.953552f,-1.0f,0.0f,0.0f,0.530096f,0.588114f,
  7.8463f,-33.7848f,-1.04645f,-1.0f,0.0f,0.0f,0.108474f,0.588114f,
  8.07159f,-33.7848f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.606544f,
  7.8463f,-33.7848f,0.953552f,0.0f,0.0f,1.0f,0.476538f,0.634903f,
  7.8463f,-33.7848f,-1.04645f,0.0f,-0.0f,-1.0f,0.039773f,0.634903f,
  8.07159f,-33.7848f,-1.04645f,0.0f,-0.0f,-1.0f,0.039773f,0.606544f,
  8.07159f,-33.7848f,-1.04645f,1.0f,0.0f,0.0f,0.107174f,0.589862f,
  8.07159f,-33.7848f,0.953552f,1.0f,0.0f,0.0f,0.532192f,0.589862f,
  8.07159f,-33.7848f,-1.04645f,8e-06f,1.0f,1e-06f,0.039773f,0.606544f,
  7.8463f,-33.7848f,-1.04645f,8e-06f,1.0f,1e-06f,0.039773f,0.634903f,
  7.8463f,-33.7848f,0.953552f,8e-06f,1.0f,1e-06f,0.476538f,0.634903f,
  8.07159f,-33.7848f,0.953552f,8e-06f,1.0f,1e-06f,0.476538f,0.606544f,
  -8.12463f,-27.922f,1.03508f,-1.0f,0.0f,-3.6e-05f,0.551168f,0.325563f,
  -8.12463f,27.9221f,1.03508f,-1.0f,0.0f,-3.6e-05f,0.926633f,0.325563f,
  -8.12462f,27.9221f,0.955238f,-1.0f,0.0f,-3.6e-05f,0.926633f,0.298213f,
  -8.12462f,-27.922f,0.955238f,-1.0f,0.0f,-3.6e-05f,0.551168f,0.298213f,
  8.12463f,27.922f,1.03508f,1.0f,-0.0f,-0.0f,0.948525f,0.350048f,
  8.12462f,-27.9221f,1.03508f,1.0f,-0.0f,-0.0f,0.534908f,0.350048f,
  8.12462f,-27.9221f,0.955238f,1.0f,-0.0f,-0.0f,0.534908f,0.319919f,
  8.12462f,27.9221f,0.955238f,1.0f,-0.0f,-0.0f,0.948525f,0.319919f,
  -8.12463f,27.9221f,1.03508f,-0.0f,0.0f,1.0f,0.528328f,0.405889f,
  -8.12463f,-27.922f,1.03508f,-0.0f,0.0f,1.0f,0.528328f,0.103007f,
  8.12462f,-27.9221f,1.03508f,-0.0f,0.0f,1.0f,0.986876f,0.103006f,
  8.12463f,27.922f,1.03508f,-0.0f,0.0f,1.0f,0.986877f,0.405888f,
  8.12462f,27.9221f,0.955238f,0.0f,-0.0f,-1.0f,0.984966f,0.403552f,
  8.12462f,-27.9221f,0.955238f,0.0f,-0.0f,-1.0f,0.984966f,0.104742f,
  -8.12462f,-27.922f,0.955238f,0.0f,-0.0f,-1.0f,0.532582f,0.104742f,
  -8.12462f,27.9221f,0.955238f,0.0f,-0.0f,-1.0f,0.532582f,0.403552f,
  -8.12463f,-27.922f,1.03508f,-3e-06f,-1.0f,-0.000287f,0.528328f,0.103007f,
  -8.12462f,-27.922f,0.955238f,-3e-06f,-1.0f,-0.000287f,0.532582f,0.104742f,
  8.12462f,-27.9221f,0.955238f,-3e-06f,-1.0f,-0.000287f,0.984966f,0.104742f,
  8.12462f,-27.9221f,1.03508f,-3e-06f,-1.0f,-0.000287f,0.986876f,0.103006f,
  -8.12463f,27.9221f,1.03508f,3e-06f,1.0f,0.000382f,0.528328f,0.405889f,
  8.12463f,27.922f,1.03508f,3e-06f,1.0f,0.000382f,0.986877f,0.405888f,
  8.12462f,27.9221f,0.955238f,3e-06f,1.0f,0.000382f,0.984966f,0.403552f,
  -8.12462f,27.9221f,0.955238f,3e-06f,1.0f,0.000382f,0.532582f,0.403552f,
  8.15069f,-53.9803f,0.948971f,-2e-06f,-1.0f,-0.000137f,0.63706f,0.740352f,
  8.15068f,-53.9803f,1.04645f,-2e-06f,-1.0f,-0.000137f,0.637058f,0.789313f,
  -8.15069f,-53.9803f,1.04645f,-2e-06f,-1.0f,-0.000137f,0.027188f,0.789313f,
  -8.15069f,-53.9803f,0.948971f,-2e-06f,-1.0f,-0.000137f,0.027188f,0.740352f,
  8.15069f,53.9803f,1.04645f,2e-06f,1.0f,0.000196f,0.627035f,0.780036f,
  8.15069f,53.9803f,0.948971f,2e-06f,1.0f,0.000196f,0.627035f,0.733729f,
  -8.15068f,53.9803f,0.94897f,2e-06f,1.0f,0.000196f,0.050247f,0.733729f,
  -8.15069f,53.9803f,1.04645f,2e-06f,1.0f,0.000196f,0.050247f,0.780036f,
  8.15069f,53.9803f,0.948971f,0.0f,-0.0f,-1.0f,0.64517f,0.94072f,
  8.15069f,27.7524f,0.948971f,0.0f,-0.0f,-1.0f,0.64517f,0.747327f,
  -8.15068f,27.7524f,0.948971f,0.0f,-0.0f,-1.0f,0.019771f,0.747327f,
  -8.15068f,53.9803f,0.94897f,0.0f,-0.0f,-1.0f,0.019771f,0.94072f,
  8.15069f,-27.7524f,0.948971f,0.0f,-0.0f,-1.0f,0.641444f,0.941777f,
  8.15069f,-53.9803f,0.948971f,0.0f,-0.0f,-1.0f,0.641444f,0.748384f,
  -8.15069f,-53.9803f,0.948971f,0.0f,-0.0f,-1.0f,0.016044f,0.748384f,
  -8.15069f,-27.7524f,0.948971f,0.0f,-0.0f,-1.0f,0.016045f,0.941777f,
  -8.15069f,53.9803f,1.04645f,-0.0f,0.0f,1.0f,0.014493f,0.945964f,
  -8.15069f,27.7524f,1.04645f,-0.0f,0.0f,1.0f,0.014493f,0.750204f,
  8.15069f,27.7523f,1.04645f,-0.0f,0.0f,1.0f,0.647547f,0.750203f,
  8.15069f,53.9803f,1.04645f,-0.0f,0.0f,1.0f,0.647547f,0.945963f,
  -8.15069f,-27.7524f,1.04645f,-0.0f,0.0f,1.0f,0.010767f,0.939644f,
  -8.15069f,-53.9803f,1.04645f,-0.0f,0.0f,1.0f,0.010767f,0.743884f,
  8.15068f,-53.9803f,1.04645f,-0.0f,0.0f,1.0f,0.643821f,0.743884f,
  8.15068f,-27.7524f,1.04645f,-0.0f,0.0f,1.0f,0.643821f,0.939644f,
  8.15069f,27.7524f,0.948971f,1.0f,-0.0f,-2.4e-05f,0.400402f,0.694541f,
  8.15069f,53.9803f,0.948971f,1.0f,-0.0f,-2.4e-05f,0.608886f,0.694541f,
  8.15069f,53.9803f,1.04645f,1.0f,-0.0f,-2.4e-05f,0.608886f,0.734016f,
  8.15069f,27.7523f,1.04645f,1.0f,-0.0f,-2.4e-05f,0.400402f,0.734016f,
  8.15068f,-27.7524f,1.04645f,1.0f,-0.0f,3.9e-05f,0.268268f,0.727222f,
  8.15068f,-53.9803f,1.04645f,1.0f,-0.0f,3.9e-05f,0.059784f,0.727222f,
  8.15069f,-53.9803f,0.948971f,1.0f,-0.0f,3.9e-05f,0.059784f,0.687747f,
  8.15069f,-27.7524f,0.948971f,1.0f,-0.0f,3.9e-05f,0.268268f,0.687747f,
  -8.15069f,-53.9803f,1.04645f,-1.0f,0.0f,-2e-05f,0.074138f,0.716738f,
  -8.15069f,-27.7524f,1.04645f,-1.0f,0.0f,-2e-05f,0.275071f,0.716738f,
  -8.15069f,-27.7524f,0.948971f,-1.0f,0.0f,-2e-05f,0.275071f,0.678695f,
  -8.15069f,-53.9803f,0.948971f,-1.0f,0.0f,-2e-05f,0.074138f,0.678695f,
  -8.15069f,27.7524f,1.04645f,-1.0f,0.0f,-2.9e-05f,0.391228f,0.723531f,
  -8.15069f,53.9803f,1.04645f,-1.0f,0.0f,-2.9e-05f,0.592154f,0.723531f,
  -8.15068f,53.9803f,0.94897f,-1.0f,0.0f,-2.9e-05f,0.592154f,0.685488f,
  -8.15068f,27.7524f,0.948971f,-1.0f,0.0f,-2.9e-05f,0.391228f,0.685488f,
}; // end cube_002Vertices

unsigned cube_002Triangles[] = {
 0, 1, 2,
 0, 2, 3,
 4, 5, 6,
 4, 6, 7,
 8, 9, 10,
 8, 10, 11,
 12, 13, 14,
 12, 14, 15,
 16, 17, 18,
 16, 18, 19,
 20, 21, 22,
 20, 22, 23,
 24, 25, 26,
 24, 26, 27,
 28, 29, 30,
 28, 30, 31,
 32, 33, 34,
 32, 34, 35,
 35, 36, 37,
 35, 37, 32,
 38, 39, 40,
 38, 40, 41,
 39, 42, 43,
 39, 43, 40,
 44, 45, 46,
 44, 46, 47,
 45, 48, 49,
 45, 49, 46,
 50, 51, 52,
 50, 52, 53,
 54, 55, 56,
 54, 56, 57,
 39, 38, 58,
 39, 58, 59,
 33, 32, 60,
 33, 60, 61,
 62, 63, 64,
 62, 64, 65,
 66, 67, 68,
 66, 68, 69,
 70, 71, 72,
 70, 72, 73,
 74, 75, 76,
 74, 76, 77,
 78, 79, 80,
 78, 80, 81,
 81, 82, 83,
 81, 83, 78,
 84, 85, 86,
 84, 86, 87,
 85, 88, 89,
 85, 89, 86,
 90, 91, 92,
 90, 92, 93,
 91, 94, 95,
 91, 95, 92,
 96, 97, 98,
 96, 98, 99,
 100, 101, 102,
 100, 102, 103,
 85, 84, 104,
 85, 104, 105,
 79, 78, 106,
 79, 106, 107,
 108, 109, 110,
 108, 110, 111,
 112, 113, 114,
 112, 114, 115,
 116, 117, 118,
 116, 118, 119,
 120, 121, 122,
 120, 122, 123,
 124, 125, 126,
 124, 126, 127,
 127, 128, 129,
 127, 129, 124,
 130, 131, 132,
 130, 132, 133,
 131, 134, 135,
 131, 135, 132,
 136, 137, 138,
 136, 138, 139,
 137, 140, 141,
 137, 141, 138,
 142, 143, 144,
 142, 144, 145,
 146, 147, 148,
 146, 148, 149,
 131, 130, 150,
 131, 150, 151,
 125, 124, 152,
 125, 152, 153,
 154, 155, 156,
 154, 156, 157,
 158, 159, 160,
 158, 160, 161,
 162, 163, 164,
 162, 164, 165,
 166, 167, 168,
 166, 168, 169,
 170, 171, 172,
 170, 172, 173,
 173, 174, 175,
 173, 175, 170,
 176, 177, 178,
 176, 178, 179,
 177, 180, 181,
 177, 181, 178,
 182, 183, 184,
 182, 184, 185,
 183, 186, 187,
 183, 187, 184,
 188, 189, 190,
 188, 190, 191,
 192, 193, 194,
 192, 194, 195,
 177, 176, 196,
 177, 196, 197,
 171, 170, 198,
 171, 198, 199,
 163, 162, 200,
 163, 200, 201,
 202, 203, 204,
 202, 204, 205,
 206, 207, 208,
 206, 208, 209,
 210, 211, 212,
 210, 212, 213,
 214, 215, 216,
 214, 216, 217,
 218, 219, 220,
 218, 220, 221,
 222, 223, 224,
 222, 224, 225,
 226, 227, 228,
 226, 228, 229,
 230, 231, 232,
 230, 232, 233,
 234, 235, 236,
 234, 236, 237,
 238, 239, 240,
 238, 240, 241,
 242, 243, 244,
 242, 244, 245,
 246, 247, 248,
 246, 248, 249,
 250, 251, 252,
 250, 252, 253,
 254, 255, 256,
 254, 256, 257,
 258, 259, 260,
 258, 260, 261,
 262, 263, 264,
 262, 264, 265,
 266, 267, 268,
 266, 268, 269,
}; // end cube_002Triangles
